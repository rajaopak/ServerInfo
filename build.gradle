plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'dev.rajaopak'
version = '0.1'

repositories {
    mavenCentral()
    maven { url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven { url  'https://oss.sonatype.org/content/groups/public/' }
    maven { url 'https://jitpack.io' }
    maven { url 'https://papermc.io/repo/repository/maven-public/' }
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.17.1-R0.1-SNAPSHOT'
    implementation 'com.github.rajaopak:OpakLibs:76cfc9e014'
    implementation 'io.papermc:paperlib:1.0.8-SNAPSHOT'
    compileOnly 'org.checkerframework:checker-qual:3.28.0'
    compileOnly 'com.github.oshi:oshi-core:6.4.0'
}

shadowJar {
    relocate('dev.rajaopak.OpakLibs', 'id.rajaopak.OpakLibs')
    relocate('io.papermc.lib', 'id.rajaopak.paperlib')
    destinationDir file('deploy')
}

def targetJavaVersion = 16
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

assemble.dependsOn shadowJar
